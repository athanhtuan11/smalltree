#!/usr/bin/env python3
"""
Utility script ƒë·ªÉ c·∫•u h√¨nh s·ªë h·ªçc sinh cho t√≠nh to√°n kh·ªëi l∆∞·ª£ng th·ª±c ph·∫©m
"""

from app import create_app
from app.models import db
import json
import os

def set_student_count(count):
    """Thi·∫øt l·∫≠p s·ªë h·ªçc sinh trong config"""
    config_file = 'student_config.json'
    config = {}
    
    if os.path.exists(config_file):
        with open(config_file, 'r', encoding='utf-8') as f:
            config = json.load(f)
    
    config['student_count'] = count
    config['last_updated'] = str(datetime.now())
    
    with open(config_file, 'w', encoding='utf-8') as f:
        json.dump(config, f, ensure_ascii=False, indent=2)
    
    print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t s·ªë h·ªçc sinh: {count}")

def get_student_count():
    """L·∫•y s·ªë h·ªçc sinh t·ª´ config"""
    config_file = 'student_config.json'
    
    if os.path.exists(config_file):
        with open(config_file, 'r', encoding='utf-8') as f:
            config = json.load(f)
            return config.get('student_count', 25)
    
    return 25  # M·∫∑c ƒë·ªãnh

if __name__ == '__main__':
    import sys
    from datetime import datetime
    
    if len(sys.argv) > 1:
        try:
            count = int(sys.argv[1])
            if count > 0:
                set_student_count(count)
            else:
                print("‚ùå S·ªë h·ªçc sinh ph·∫£i l·ªõn h∆°n 0")
        except ValueError:
            print("‚ùå Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá")
    else:
        current_count = get_student_count()
        print(f"üìä S·ªë h·ªçc sinh hi·ªán t·∫°i: {current_count}")
        print("\nC√°ch s·ª≠ d·ª•ng:")
        print(f"  python {sys.argv[0]} <s·ªë_h·ªçc_sinh>")
        print("\nV√≠ d·ª•:")
        print(f"  python {sys.argv[0]} 30")
